{
  "contractName": "HegicPooledStakingWBTC",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract IHegicStaking",
          "name": "_staking",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_underlying",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lotId",
          "type": "uint256"
        }
      ],
      "name": "AddLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyDate",
          "type": "uint256"
        }
      ],
      "name": "BuyLot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "name": "Pay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellDate",
          "type": "uint256"
        }
      ],
      "name": "SellLot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ACCURACY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "FALLBACK_RECIPIENT",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "FEE_RECIPIENT",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "HEGIC",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "LOCK_UP_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "STAKING_LOT_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "changeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "changeFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_HEGICAmount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slotId",
          "type": "uint256"
        }
      ],
      "name": "exitFromStakingLot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getNotPayableProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "notPayableProfit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slotId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getStakingLotShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getUnlockedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lockedTokens",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getUnreceivedProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "unreceived",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getUnsaved",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "numberOfStakingLots",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "payProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "profitOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract IHegicStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalProfitPerToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "updateProfit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract IHegicStaking\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_underlying\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lotId\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyDate\",\"type\":\"uint256\"}],\"name\":\"BuyLot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"name\":\"Pay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellDate\",\"type\":\"uint256\"}],\"name\":\"SellLot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACCURACY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FALLBACK_RECIPIENT\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_RECIPIENT\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HEGIC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LOCK_UP_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_LOT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"changeFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_HEGICAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slotId\",\"type\":\"uint256\"}],\"name\":\"exitFromStakingLot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getNotPayableProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"notPayableProfit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slotId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getStakingLotShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUnlockedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockedTokens\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUnreceivedProfit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"unreceived\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUnsaved\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfStakingLots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"profitOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract IHegicStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProfitPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateProfit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/juanmontero/Projects/DeFi/hegic/hegic-pooled-staking/contracts/HegicPooledStakingWBTC.sol\":\"HegicPooledStakingWBTC\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/juanmontero/Projects/DeFi/hegic/hegic-pooled-staking/contracts/HegicPooledStaking.sol\":{\"keccak256\":\"0x74ebd0277b3caddb0bbf7810c56917429db7b2357ef95f7b212a3f8de514196c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0253bce611bdb52e7be99bbf25dc694773ca17f9bfd45e4b8358637c208d3e67\",\"dweb:/ipfs/QmWWKZ1GG3iznwsGjzDZwVKYHQvyTuFi5WST8djwYPKBv9\"]},\"/Users/juanmontero/Projects/DeFi/hegic/hegic-pooled-staking/contracts/HegicPooledStakingWBTC.sol\":{\"keccak256\":\"0x55ebf3376e08fe763345e319a621a16659863fbd75599e2a09f4e640ea3d6689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a6c334770a3a05274df494adeb41e3885a41916d46aec0e1e936c7098bca74d\",\"dweb:/ipfs/QmcedU8mZw7ypkdfrs6rmDA1LH1paKvMMXJZYBeGpxPJUx\"]},\"/Users/juanmontero/Projects/DeFi/hegic/hegic-pooled-staking/contracts/Interfaces.sol\":{\"keccak256\":\"0xbde0fbad20dba04b23d886e54923f0dd0027c3cce5ee569aa70935467571b33f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://74fc1e1aaa3fb9e6cdd40c7c82b785d0adf03bdc636a299cd51f9d1dd9a75806\",\"dweb:/ipfs/QmTTzGSKjUvRQH7UPoRxjCypPqSwsgxeetA4oTwFLgEjpB\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x91e0bd6a6762d2a1700dab0849de8422611355100576c4beef1e80d82a4104a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73bbd77af0a8b07255d2ffa20728bcf13b116007c9ddac5d37046cfabb0e1e02\",\"dweb:/ipfs/QmRgZgWCWCSMTTaok6o4QvWA6MgB4goS8qpb3sN7bAvaZ9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c26b39d26f7ed489e555d955dcd3e01872972e71fdd1528e93ec164e4f23385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efdc632af6960cf865dbc113665ea1f5b90eab75cc40ec062b2f6ae6da582017\",\"dweb:/ipfs/QmfAZFDuG62vxmAN9DnXApv7e7PMzPqi4RkqqZHLMSQiY5\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf3b30f8a49631420635a8c35daacfcaa338012755f18a76fdd118730256f9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d7de652204c2ee291a61aa984103dfc7ae4392d651fbbc44a0079caee7c69a3\",\"dweb:/ipfs/Qmcw1cQnq9eWDnrCBwU3TNyqLfTMUFg5YKpYUkELoMPuUE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
  "bytecode": "0x60a06040526212750060075569bc0a9392c65c3b0000006008556c0c9f2c9cd04674edea400000006009553480156200003757600080fd5b5060405162002b7038038062002b70833981810160405260608110156200005d57600080fd5b50805160208083015160409384015184518086018652601081526f455448205374616b656420484547494360801b81850152855180870190965260098652680e6908a8e92868aa8960bb1b938601939093529293909291849184919081816000620000c76200026d565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35081516200012690600490602085019062000271565b5080516200013c90600590602084019062000271565b505060068054606087901b6001600160601b031916608052601260ff1990911617610100600160a81b0319166101006001600160a01b03878116918202929092179092556000600e819055600f819055600d8190556010819055600a8054336001600160a01b031991821681178355600b8054909216179055600c556040805163095ea7b360e01b815260048101949094526c0c9f2c9cd04674edea40000000602485015251918816935063095ea7b392604480820193602093909283900390910190829087803b1580156200021157600080fd5b505af115801562000226573d6000803e3d6000fd5b505050506040513d60208110156200023d57600080fd5b5050601980546001600160a01b0319166001600160a01b039690961695909517909455506200030d945050505050565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002b457805160ff1916838001178555620002e4565b82800160010185558215620002e4579182015b82811115620002e4578251825591602001919060010190620002c7565b50620002f2929150620002f6565b5090565b5b80821115620002f25760008155600101620002f7565b60805160601c61283b62000335600039806112e65280611c7b5280611e04525061283b6000f3fe6080604052600436106102345760003560e01c80636f307dc31161012e578063a9059cbb116100ab578063da119ced1161006f578063da119ced146107cc578063dd62ed3e146107e1578063ebd090541461081c578063f2fde38b14610831578063fbcd9b05146108645761023b565b8063a9059cbb1461072a578063ad7a672f14610763578063b6b55f2514610778578063c018fb6f146107a2578063c57981b5146107b75761023b565b80638da5cb5b116100f25780638da5cb5b1461067f5780638ec848121461069457806391b1e118146106a957806395d89b41146106dc578063a457c2d7146106f15761023b565b80636f307dc3146105f857806370a082311461060d578063715018a61461064057806371e395a8146106555780637b80889b1461066a5761023b565b80632d3008dd116101bc57806348de85171161018057806348de8517146105385780634cf088d91461057157806354198ce91461058657806356e2da1b146105b95780636a1db1bf146105ce5761023b565b80632d3008dd14610480578063313ce5671461049557806335e20bff146104c057806339509351146104ea5780634456bb22146105235761023b565b80631b016373116102035780631b016373146103715780631f803ac3146103a257806323604071146103d557806323b872dd1461040a5780632a69c1bb1461044d5761023b565b806306f498a91461024057806306fdde0314610285578063095ea7b31461030f57806318160ddd1461035c5761023b565b3661023b57005b600080fd5b34801561024c57600080fd5b506102736004803603602081101561026357600080fd5b50356001600160a01b0316610879565b60408051918252519081900360200190f35b34801561029157600080fd5b5061029a6109b5565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d45781810151838201526020016102bc565b50505050905090810190601f1680156103015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031b57600080fd5b506103486004803603604081101561033257600080fd5b506001600160a01b038135169060200135610a4b565b604080519115158252519081900360200190f35b34801561036857600080fd5b50610273610a69565b34801561037d57600080fd5b50610386610a6f565b604080516001600160a01b039092168252519081900360200190f35b3480156103ae57600080fd5b50610273600480360360208110156103c557600080fd5b50356001600160a01b0316610a7e565b3480156103e157600080fd5b50610408600480360360208110156103f857600080fd5b50356001600160a01b0316610b07565b005b34801561041657600080fd5b506103486004803603606081101561042d57600080fd5b506001600160a01b03813581169160208101359091169060400135610b81565b34801561045957600080fd5b506102736004803603602081101561047057600080fd5b50356001600160a01b0316610c08565b34801561048c57600080fd5b50610273610d12565b3480156104a157600080fd5b506104aa610d18565b6040805160ff9092168252519081900360200190f35b3480156104cc57600080fd5b50610408600480360360208110156104e357600080fd5b5035610d21565b3480156104f657600080fd5b506103486004803603604081101561050d57600080fd5b506001600160a01b038135169060200135611054565b34801561052f57600080fd5b506102736110a2565b34801561054457600080fd5b506102736004803603604081101561055b57600080fd5b50803590602001356001600160a01b03166110a8565b34801561057d57600080fd5b506103866110d0565b34801561059257600080fd5b50610273600480360360208110156105a957600080fd5b50356001600160a01b03166110e4565b3480156105c557600080fd5b5061027361112e565b3480156105da57600080fd5b50610408600480360360208110156105f157600080fd5b5035611134565b34801561060457600080fd5b50610386611218565b34801561061957600080fd5b506102736004803603602081101561063057600080fd5b50356001600160a01b0316611227565b34801561064c57600080fd5b50610408611242565b34801561066157600080fd5b506103866112e4565b34801561067657600080fd5b50610273611308565b34801561068b57600080fd5b5061038661130e565b3480156106a057600080fd5b5061040861131d565b3480156106b557600080fd5b50610273600480360360208110156106cc57600080fd5b50356001600160a01b0316611479565b3480156106e857600080fd5b5061029a6114d6565b3480156106fd57600080fd5b506103486004803603604081101561071457600080fd5b506001600160a01b038135169060200135611537565b34801561073657600080fd5b506103486004803603604081101561074d57600080fd5b506001600160a01b03813516906020013561159f565b34801561076f57600080fd5b506102736115b3565b34801561078457600080fd5b506104086004803603602081101561079b57600080fd5b50356115b9565b3480156107ae57600080fd5b50610408611690565b3480156107c357600080fd5b506102736116f5565b3480156107d857600080fd5b506102736116fb565b3480156107ed57600080fd5b506102736004803603604081101561080457600080fd5b506001600160a01b0381358116916020013516611701565b34801561082857600080fd5b5061038661172c565b34801561083d57600080fd5b506104086004803603602081101561085457600080fd5b50356001600160a01b031661173b565b34801561087057600080fd5b50610273611833565b6001600160a01b038116600090815260146020526040812054156109b0576001600160a01b0382166000908152601460205260408120805460001981019081106108bf57fe5b60009182526020808320909101546001600160a01b03861683526017825260408084205482855260159093529092205491925090811161098b5760008281526011602090815260408083206001600160a01b038816845290915281205461093a906109339061092d88611227565b90611839565b839061187b565b60008481526011602090815260408083206001600160a01b038a168452825280832054878452601590925282205492935090916109769161187b565b905061098282826118d4565b945050506109ad565b6109aa6109a361099a86610a7e565b61092d87611227565b829061187b565b92505b50505b919050565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a415780601f10610a1657610100808354040283529160200191610a41565b820191906000526020600020905b815481529060010190602001808311610a2457829003601f168201915b5050505050905090565b6000610a5f610a5861192e565b8484611932565b5060015b92915050565b60035490565b600a546001600160a01b031681565b6001600160a01b038116600090815260146020526040812054156109b0576001600160a01b038216600090815260146020526040812080546000198101908110610ac457fe5b90600052602060002001549050600d54811415610b015760008181526011602090815260408083206001600160a01b038716845290915290205491505b50919050565b610b0f61192e565b6000546001600160a01b03908116911614610b5f576040805162461bcd60e51b8152602060048201819052602482015260008051602061272d833981519152604482015290519081900360640190fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b8e848484611a1e565b610bfe84610b9a61192e565b610bf985604051806060016040528060288152602001612705602891396001600160a01b038a16600090815260026020526040812090610bd861192e565b6001600160a01b031681526020810191909152604001600020549190611b7b565b611932565b5060019392505050565b600080610c1483611227565b90506000610c2184610a7e565b90506000610c2f8383611839565b90506000600660019054906101000a90046001600160a01b03166001600160a01b03166354198ce9306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610c9557600080fd5b505afa158015610ca9573d6000803e3d6000fd5b505050506040513d6020811015610cbf57600080fd5b5051600f5490915015610d0457610cfd600954610cf184610cf7600f54610cf16009548861187b90919063ffffffff16565b90611c12565b9061187b565b9450610d09565b600094505b50505050919050565b60085481565b60065460ff1690565b6000818152601160209081526040808320338452909152902054610d8c576040805162461bcd60e51b815260206004820152601d60248201527f4e6f742070617274696369706174696e6720696e2074686973206c6f74000000604482015290519081900360640190fd5b600d54811115610ddb576040805162461bcd60e51b815260206004820152601560248201527414dd185ada5b99c81b1bdd081b9bdd08199bdd5b99605a1b604482015290519081900360640190fd5b600d54811415610e2a57600d546000908152601160209081526040808320338452909152902054610e0b90611c54565b6000818152601160209081526040808320338452909152812055611051565b600081815260186020526040902054421015610e775760405162461bcd60e51b815260040180806020018281038252604a81526020018061269a604a913960600191505060405180910390fd5b600660019054906101000a90046001600160a01b03166001600160a01b031663e4849b3260016040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610ed357600080fd5b505af1158015610ee7573d6000803e3d6000fd5b50506040805142815290517fd49accdec98ee69b54d4406b129420fc3adf0c8d610bcb9ef28806fb07d318349350908190036020019150a1600081815260136020908152604091829020805483518184028101840190945280845260609392830182828015610f7f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f61575b5050506000858152601160209081526040808320338452909152902054929350610fac9150829050611c54565b600f805482900390556000805b835181101561104c57838181518110610fce57fe5b60209081029190910181015160008781526011835260408082206001600160a01b038416808452945290205494509250331461102157600f8054849003905561101682611ca2565b506110218383611d0f565b60008581526011602090815260408083206001600160a01b0386168452909152812055600101610fb9565b505050505b50565b6000610a5f61106161192e565b84610bf9856002600061107261192e565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906118d4565b60105481565b60009182526011602090815260408084206001600160a01b0393909316845291905290205490565b60065461010090046001600160a01b031681565b6000806110f083610c08565b90506111278161112161110286611479565b6001600160a01b038716600090815260166020526040902054906118d4565b906118d4565b9392505050565b60075481565b61113c61192e565b6000546001600160a01b0390811691161461118c576040805162461bcd60e51b8152602060048201819052602482015260008051602061272d833981519152604482015290519081900360640190fd5b600081116111cf576040805162461bcd60e51b815260206004820152600b60248201526a46656520746f6f206c6f7760a81b604482015290519081900360640190fd5b60648110611213576040805162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b604482015290519081900360640190fd5b600c55565b6019546001600160a01b031681565b6001600160a01b031660009081526001602052604090205490565b61124a61192e565b6000546001600160a01b0390811691161461129a576040805162461bcd60e51b8152602060048201819052602482015260008051602061272d833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b600f5481565b6000546001600160a01b031690565b600654604080516354198ce960e01b8152306004820152905160009261010090046001600160a01b0316916354198ce9916024808301926020929190829003018186803b15801561136d57600080fd5b505afa158015611381573d6000803e3d6000fd5b505050506040513d602081101561139757600080fd5b50519050801561142057600660019054906101000a90046001600160a01b03166001600160a01b031663f011a7af6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113f157600080fd5b505af1158015611405573d6000803e3d6000fd5b505050506040513d602081101561141b57600080fd5b505190505b6000600f541161144c57600a54601954611447916001600160a01b03918216911683611d86565b611051565b61147361146a600f54610cf16009548561187b90919063ffffffff16565b601054906118d4565b60105550565b60008061148583611227565b9050600061149284610a7e565b905060006114a08383611839565b60009450905080156114ce576114cb600954610cf16114be88610879565b60105461092d908661187b565b93505b505050919050565b60058054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a415780601f10610a1657610100808354040283529160200191610a41565b6000610a5f61154461192e565b84610bf9856040518060600160405280602581526020016127e1602591396002600061156e61192e565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611b7b565b6000610a5f6115ac61192e565b8484611a1e565b600e5481565b600081116115ff576040805162461bcd60e51b815260206004820152600e60248201526d416d6f756e7420746f6f206c6f7760901b604482015290519081900360640190fd5b600854811061163f5760405162461bcd60e51b81526004018080602001828103825260218152602001806125e96021913960400191505060405180910390fd5b61164881611ddd565b6116528133611d0f565b604080513381526020810183905281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a150565b600061169b33611ca2565b90506116a681611e2c565b336000818152601660209081526040808320929092558151928352820183905280517f357b676c439b9e49b4410f8eb8680bee4223724802d8e3fd422e1756f87b475f9281900390910190a150565b600c5481565b600d5481565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600b546001600160a01b031681565b61174361192e565b6000546001600160a01b03908116911614611793576040805162461bcd60e51b8152602060048201819052602482015260008051602061272d833981519152604482015290519081900360640190fd5b6001600160a01b0381166117d85760405162461bcd60e51b815260040180806020018281038252602681526020018061262c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60095481565b600061112783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611b7b565b60008261188a57506000610a63565b8282028284828161189757fe5b04146111275760405162461bcd60e51b81526004018080602001828103825260218152602001806126e46021913960400191505060405180910390fd5b600082820183811015611127576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b0383166119775760405162461bcd60e51b81526004018080602001828103825260248152602001806127936024913960400191505060405180910390fd5b6001600160a01b0382166119bc5760405162461bcd60e51b81526004018080602001828103825260228152602001806126526022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611a635760405162461bcd60e51b815260040180806020018281038252602581526020018061276e6025913960400191505060405180910390fd5b6001600160a01b038216611aa85760405162461bcd60e51b81526004018080602001828103825260238152602001806125c66023913960400191505060405180910390fd5b611ab3838383611e8e565b611af081604051806060016040528060268152602001612674602691396001600160a01b0386166000908152600160205260409020549190611b7b565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611b1f90826118d4565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611c0a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bcf578181015183820152602001611bb7565b50505050905090810190601f168015611bfc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600061112783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611ec6565b600e54611c619082611839565b600e55611c6e3382611f2b565b6110516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611d86565b6000611cac61131d565b6000611cb783611479565b6010546001600160a01b038516600090815260176020908152604080832093909355601690522054909150611cec90826118d4565b6001600160a01b0390931660009081526016602052604090208390555090919050565b600854600f54600e54611d2191611839565b10611d78576000611d4560085461092d600f54600e5461183990919063ffffffff16565b9050611d5a611d548483611839565b83612027565b611d6261214a565b8015611d7257611d728183612027565b50611d82565b611d828282612027565b5050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611dd890849061223e565b505050565b600e54611dea90826118d4565b600e55611df733826122ef565b6110516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846123e1565b611e6833611e556064610cf1611e4e600c54606461183990919063ffffffff16565b869061187b565b6019546001600160a01b03169190611d86565b600b54600c54611051916001600160a01b031690611e5590606490610cf190869061187b565b6001600160a01b03831615611ea857611ea683611ca2565b505b6001600160a01b03821615611dd857611ec082611ca2565b50505050565b60008183611f155760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611bcf578181015183820152602001611bb7565b506000838581611f2157fe5b0495945050505050565b6001600160a01b038216611f705760405162461bcd60e51b815260040180806020018281038252602181526020018061274d6021913960400191505060405180910390fd5b611f7c82600083611e8e565b611fb98160405180606001604052806022815260200161260a602291396001600160a01b0385166000908152600160205260409020549190611b7b565b6001600160a01b038316600090815260016020526040902055600354611fdf9082611839565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600d5460009081526011602090815260408083206001600160a01b03851684529091529020546120a9576001600160a01b0381166000818152601460209081526040808320600d805482546001818101855593875285872001555484526013835290832080549182018155835291200180546001600160a01b03191690911790555b600d5460009081526011602090815260408083206001600160a01b03851684529091529020546120d990836118d4565b600d805460009081526011602090815260408083206001600160a01b0387168085529083529281902094909455915483519182529181018590528083019190915290517f06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca9181900360600190a15050565b600660019054906101000a90046001600160a01b03166001600160a01b031663d96a094a60016040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156121a657600080fd5b505af11580156121ba573d6000803e3d6000fd5b5050601054600d805460009081526015602090815260408083209490945560075483548352601890915292902042909201909155805460010190555050600854600f54612206916118d4565b600f556040805142815290517fda7648eeaf3d0dc82ce7240eed345d3268ee5959cc3021dad64a9743214bc9a19181900360200190a1565b6060612293826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661243b9092919063ffffffff16565b805190915015611dd8578080602001905160208110156122b257600080fd5b5051611dd85760405162461bcd60e51b815260040180806020018281038252602a8152602001806127b7602a913960400191505060405180910390fd5b6001600160a01b03821661234a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61235660008383611e8e565b60035461236390826118d4565b6003556001600160a01b03821660009081526001602052604090205461238990826118d4565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611ec090859061223e565b606061244a8484600085612452565b949350505050565b606061245d856125bf565b6124ae576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106124ed5780518252601f1990920191602091820191016124ce565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461254f576040519150601f19603f3d011682016040523d82523d6000602084013e612554565b606091505b5091509150811561256857915061244a9050565b8051156125785780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315611bcf578181015183820152602001611bb7565b3b15159056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373416d6f756e7420746f6f20686967682c2062757920796f7572206f776e206c6f7445524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63655374616b696e67204c6f74206973207374696c6c206c6f636b65642e20596f75206861766520746f20776169742032207765656b732073696e6365206c6f742773207075726368617365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220051d85730ff5b22d440e97fd44fdc12aa6667bcfb220121cf726c18c70e6d23f64736f6c634300060c0033",
  "deployedBytecode": "0x6080604052600436106102345760003560e01c80636f307dc31161012e578063a9059cbb116100ab578063da119ced1161006f578063da119ced146107cc578063dd62ed3e146107e1578063ebd090541461081c578063f2fde38b14610831578063fbcd9b05146108645761023b565b8063a9059cbb1461072a578063ad7a672f14610763578063b6b55f2514610778578063c018fb6f146107a2578063c57981b5146107b75761023b565b80638da5cb5b116100f25780638da5cb5b1461067f5780638ec848121461069457806391b1e118146106a957806395d89b41146106dc578063a457c2d7146106f15761023b565b80636f307dc3146105f857806370a082311461060d578063715018a61461064057806371e395a8146106555780637b80889b1461066a5761023b565b80632d3008dd116101bc57806348de85171161018057806348de8517146105385780634cf088d91461057157806354198ce91461058657806356e2da1b146105b95780636a1db1bf146105ce5761023b565b80632d3008dd14610480578063313ce5671461049557806335e20bff146104c057806339509351146104ea5780634456bb22146105235761023b565b80631b016373116102035780631b016373146103715780631f803ac3146103a257806323604071146103d557806323b872dd1461040a5780632a69c1bb1461044d5761023b565b806306f498a91461024057806306fdde0314610285578063095ea7b31461030f57806318160ddd1461035c5761023b565b3661023b57005b600080fd5b34801561024c57600080fd5b506102736004803603602081101561026357600080fd5b50356001600160a01b0316610879565b60408051918252519081900360200190f35b34801561029157600080fd5b5061029a6109b5565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d45781810151838201526020016102bc565b50505050905090810190601f1680156103015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031b57600080fd5b506103486004803603604081101561033257600080fd5b506001600160a01b038135169060200135610a4b565b604080519115158252519081900360200190f35b34801561036857600080fd5b50610273610a69565b34801561037d57600080fd5b50610386610a6f565b604080516001600160a01b039092168252519081900360200190f35b3480156103ae57600080fd5b50610273600480360360208110156103c557600080fd5b50356001600160a01b0316610a7e565b3480156103e157600080fd5b50610408600480360360208110156103f857600080fd5b50356001600160a01b0316610b07565b005b34801561041657600080fd5b506103486004803603606081101561042d57600080fd5b506001600160a01b03813581169160208101359091169060400135610b81565b34801561045957600080fd5b506102736004803603602081101561047057600080fd5b50356001600160a01b0316610c08565b34801561048c57600080fd5b50610273610d12565b3480156104a157600080fd5b506104aa610d18565b6040805160ff9092168252519081900360200190f35b3480156104cc57600080fd5b50610408600480360360208110156104e357600080fd5b5035610d21565b3480156104f657600080fd5b506103486004803603604081101561050d57600080fd5b506001600160a01b038135169060200135611054565b34801561052f57600080fd5b506102736110a2565b34801561054457600080fd5b506102736004803603604081101561055b57600080fd5b50803590602001356001600160a01b03166110a8565b34801561057d57600080fd5b506103866110d0565b34801561059257600080fd5b50610273600480360360208110156105a957600080fd5b50356001600160a01b03166110e4565b3480156105c557600080fd5b5061027361112e565b3480156105da57600080fd5b50610408600480360360208110156105f157600080fd5b5035611134565b34801561060457600080fd5b50610386611218565b34801561061957600080fd5b506102736004803603602081101561063057600080fd5b50356001600160a01b0316611227565b34801561064c57600080fd5b50610408611242565b34801561066157600080fd5b506103866112e4565b34801561067657600080fd5b50610273611308565b34801561068b57600080fd5b5061038661130e565b3480156106a057600080fd5b5061040861131d565b3480156106b557600080fd5b50610273600480360360208110156106cc57600080fd5b50356001600160a01b0316611479565b3480156106e857600080fd5b5061029a6114d6565b3480156106fd57600080fd5b506103486004803603604081101561071457600080fd5b506001600160a01b038135169060200135611537565b34801561073657600080fd5b506103486004803603604081101561074d57600080fd5b506001600160a01b03813516906020013561159f565b34801561076f57600080fd5b506102736115b3565b34801561078457600080fd5b506104086004803603602081101561079b57600080fd5b50356115b9565b3480156107ae57600080fd5b50610408611690565b3480156107c357600080fd5b506102736116f5565b3480156107d857600080fd5b506102736116fb565b3480156107ed57600080fd5b506102736004803603604081101561080457600080fd5b506001600160a01b0381358116916020013516611701565b34801561082857600080fd5b5061038661172c565b34801561083d57600080fd5b506104086004803603602081101561085457600080fd5b50356001600160a01b031661173b565b34801561087057600080fd5b50610273611833565b6001600160a01b038116600090815260146020526040812054156109b0576001600160a01b0382166000908152601460205260408120805460001981019081106108bf57fe5b60009182526020808320909101546001600160a01b03861683526017825260408084205482855260159093529092205491925090811161098b5760008281526011602090815260408083206001600160a01b038816845290915281205461093a906109339061092d88611227565b90611839565b839061187b565b60008481526011602090815260408083206001600160a01b038a168452825280832054878452601590925282205492935090916109769161187b565b905061098282826118d4565b945050506109ad565b6109aa6109a361099a86610a7e565b61092d87611227565b829061187b565b92505b50505b919050565b60048054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a415780601f10610a1657610100808354040283529160200191610a41565b820191906000526020600020905b815481529060010190602001808311610a2457829003601f168201915b5050505050905090565b6000610a5f610a5861192e565b8484611932565b5060015b92915050565b60035490565b600a546001600160a01b031681565b6001600160a01b038116600090815260146020526040812054156109b0576001600160a01b038216600090815260146020526040812080546000198101908110610ac457fe5b90600052602060002001549050600d54811415610b015760008181526011602090815260408083206001600160a01b038716845290915290205491505b50919050565b610b0f61192e565b6000546001600160a01b03908116911614610b5f576040805162461bcd60e51b8152602060048201819052602482015260008051602061272d833981519152604482015290519081900360640190fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b8e848484611a1e565b610bfe84610b9a61192e565b610bf985604051806060016040528060288152602001612705602891396001600160a01b038a16600090815260026020526040812090610bd861192e565b6001600160a01b031681526020810191909152604001600020549190611b7b565b611932565b5060019392505050565b600080610c1483611227565b90506000610c2184610a7e565b90506000610c2f8383611839565b90506000600660019054906101000a90046001600160a01b03166001600160a01b03166354198ce9306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610c9557600080fd5b505afa158015610ca9573d6000803e3d6000fd5b505050506040513d6020811015610cbf57600080fd5b5051600f5490915015610d0457610cfd600954610cf184610cf7600f54610cf16009548861187b90919063ffffffff16565b90611c12565b9061187b565b9450610d09565b600094505b50505050919050565b60085481565b60065460ff1690565b6000818152601160209081526040808320338452909152902054610d8c576040805162461bcd60e51b815260206004820152601d60248201527f4e6f742070617274696369706174696e6720696e2074686973206c6f74000000604482015290519081900360640190fd5b600d54811115610ddb576040805162461bcd60e51b815260206004820152601560248201527414dd185ada5b99c81b1bdd081b9bdd08199bdd5b99605a1b604482015290519081900360640190fd5b600d54811415610e2a57600d546000908152601160209081526040808320338452909152902054610e0b90611c54565b6000818152601160209081526040808320338452909152812055611051565b600081815260186020526040902054421015610e775760405162461bcd60e51b815260040180806020018281038252604a81526020018061269a604a913960600191505060405180910390fd5b600660019054906101000a90046001600160a01b03166001600160a01b031663e4849b3260016040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610ed357600080fd5b505af1158015610ee7573d6000803e3d6000fd5b50506040805142815290517fd49accdec98ee69b54d4406b129420fc3adf0c8d610bcb9ef28806fb07d318349350908190036020019150a1600081815260136020908152604091829020805483518184028101840190945280845260609392830182828015610f7f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f61575b5050506000858152601160209081526040808320338452909152902054929350610fac9150829050611c54565b600f805482900390556000805b835181101561104c57838181518110610fce57fe5b60209081029190910181015160008781526011835260408082206001600160a01b038416808452945290205494509250331461102157600f8054849003905561101682611ca2565b506110218383611d0f565b60008581526011602090815260408083206001600160a01b0386168452909152812055600101610fb9565b505050505b50565b6000610a5f61106161192e565b84610bf9856002600061107261192e565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906118d4565b60105481565b60009182526011602090815260408084206001600160a01b0393909316845291905290205490565b60065461010090046001600160a01b031681565b6000806110f083610c08565b90506111278161112161110286611479565b6001600160a01b038716600090815260166020526040902054906118d4565b906118d4565b9392505050565b60075481565b61113c61192e565b6000546001600160a01b0390811691161461118c576040805162461bcd60e51b8152602060048201819052602482015260008051602061272d833981519152604482015290519081900360640190fd5b600081116111cf576040805162461bcd60e51b815260206004820152600b60248201526a46656520746f6f206c6f7760a81b604482015290519081900360640190fd5b60648110611213576040805162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b604482015290519081900360640190fd5b600c55565b6019546001600160a01b031681565b6001600160a01b031660009081526001602052604090205490565b61124a61192e565b6000546001600160a01b0390811691161461129a576040805162461bcd60e51b8152602060048201819052602482015260008051602061272d833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b600f5481565b6000546001600160a01b031690565b600654604080516354198ce960e01b8152306004820152905160009261010090046001600160a01b0316916354198ce9916024808301926020929190829003018186803b15801561136d57600080fd5b505afa158015611381573d6000803e3d6000fd5b505050506040513d602081101561139757600080fd5b50519050801561142057600660019054906101000a90046001600160a01b03166001600160a01b031663f011a7af6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113f157600080fd5b505af1158015611405573d6000803e3d6000fd5b505050506040513d602081101561141b57600080fd5b505190505b6000600f541161144c57600a54601954611447916001600160a01b03918216911683611d86565b611051565b61147361146a600f54610cf16009548561187b90919063ffffffff16565b601054906118d4565b60105550565b60008061148583611227565b9050600061149284610a7e565b905060006114a08383611839565b60009450905080156114ce576114cb600954610cf16114be88610879565b60105461092d908661187b565b93505b505050919050565b60058054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610a415780601f10610a1657610100808354040283529160200191610a41565b6000610a5f61154461192e565b84610bf9856040518060600160405280602581526020016127e1602591396002600061156e61192e565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190611b7b565b6000610a5f6115ac61192e565b8484611a1e565b600e5481565b600081116115ff576040805162461bcd60e51b815260206004820152600e60248201526d416d6f756e7420746f6f206c6f7760901b604482015290519081900360640190fd5b600854811061163f5760405162461bcd60e51b81526004018080602001828103825260218152602001806125e96021913960400191505060405180910390fd5b61164881611ddd565b6116528133611d0f565b604080513381526020810183905281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a150565b600061169b33611ca2565b90506116a681611e2c565b336000818152601660209081526040808320929092558151928352820183905280517f357b676c439b9e49b4410f8eb8680bee4223724802d8e3fd422e1756f87b475f9281900390910190a150565b600c5481565b600d5481565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b600b546001600160a01b031681565b61174361192e565b6000546001600160a01b03908116911614611793576040805162461bcd60e51b8152602060048201819052602482015260008051602061272d833981519152604482015290519081900360640190fd5b6001600160a01b0381166117d85760405162461bcd60e51b815260040180806020018281038252602681526020018061262c6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60095481565b600061112783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611b7b565b60008261188a57506000610a63565b8282028284828161189757fe5b04146111275760405162461bcd60e51b81526004018080602001828103825260218152602001806126e46021913960400191505060405180910390fd5b600082820183811015611127576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b0383166119775760405162461bcd60e51b81526004018080602001828103825260248152602001806127936024913960400191505060405180910390fd5b6001600160a01b0382166119bc5760405162461bcd60e51b81526004018080602001828103825260228152602001806126526022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316611a635760405162461bcd60e51b815260040180806020018281038252602581526020018061276e6025913960400191505060405180910390fd5b6001600160a01b038216611aa85760405162461bcd60e51b81526004018080602001828103825260238152602001806125c66023913960400191505060405180910390fd5b611ab3838383611e8e565b611af081604051806060016040528060268152602001612674602691396001600160a01b0386166000908152600160205260409020549190611b7b565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611b1f90826118d4565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115611c0a5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bcf578181015183820152602001611bb7565b50505050905090810190601f168015611bfc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600061112783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611ec6565b600e54611c619082611839565b600e55611c6e3382611f2b565b6110516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611d86565b6000611cac61131d565b6000611cb783611479565b6010546001600160a01b038516600090815260176020908152604080832093909355601690522054909150611cec90826118d4565b6001600160a01b0390931660009081526016602052604090208390555090919050565b600854600f54600e54611d2191611839565b10611d78576000611d4560085461092d600f54600e5461183990919063ffffffff16565b9050611d5a611d548483611839565b83612027565b611d6261214a565b8015611d7257611d728183612027565b50611d82565b611d828282612027565b5050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611dd890849061223e565b505050565b600e54611dea90826118d4565b600e55611df733826122ef565b6110516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846123e1565b611e6833611e556064610cf1611e4e600c54606461183990919063ffffffff16565b869061187b565b6019546001600160a01b03169190611d86565b600b54600c54611051916001600160a01b031690611e5590606490610cf190869061187b565b6001600160a01b03831615611ea857611ea683611ca2565b505b6001600160a01b03821615611dd857611ec082611ca2565b50505050565b60008183611f155760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315611bcf578181015183820152602001611bb7565b506000838581611f2157fe5b0495945050505050565b6001600160a01b038216611f705760405162461bcd60e51b815260040180806020018281038252602181526020018061274d6021913960400191505060405180910390fd5b611f7c82600083611e8e565b611fb98160405180606001604052806022815260200161260a602291396001600160a01b0385166000908152600160205260409020549190611b7b565b6001600160a01b038316600090815260016020526040902055600354611fdf9082611839565b6003556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600d5460009081526011602090815260408083206001600160a01b03851684529091529020546120a9576001600160a01b0381166000818152601460209081526040808320600d805482546001818101855593875285872001555484526013835290832080549182018155835291200180546001600160a01b03191690911790555b600d5460009081526011602090815260408083206001600160a01b03851684529091529020546120d990836118d4565b600d805460009081526011602090815260408083206001600160a01b0387168085529083529281902094909455915483519182529181018590528083019190915290517f06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca9181900360600190a15050565b600660019054906101000a90046001600160a01b03166001600160a01b031663d96a094a60016040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156121a657600080fd5b505af11580156121ba573d6000803e3d6000fd5b5050601054600d805460009081526015602090815260408083209490945560075483548352601890915292902042909201909155805460010190555050600854600f54612206916118d4565b600f556040805142815290517fda7648eeaf3d0dc82ce7240eed345d3268ee5959cc3021dad64a9743214bc9a19181900360200190a1565b6060612293826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661243b9092919063ffffffff16565b805190915015611dd8578080602001905160208110156122b257600080fd5b5051611dd85760405162461bcd60e51b815260040180806020018281038252602a8152602001806127b7602a913960400191505060405180910390fd5b6001600160a01b03821661234a576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61235660008383611e8e565b60035461236390826118d4565b6003556001600160a01b03821660009081526001602052604090205461238990826118d4565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611ec090859061223e565b606061244a8484600085612452565b949350505050565b606061245d856125bf565b6124ae576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106124ed5780518252601f1990920191602091820191016124ce565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461254f576040519150601f19603f3d011682016040523d82523d6000602084013e612554565b606091505b5091509150811561256857915061244a9050565b8051156125785780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315611bcf578181015183820152602001611bb7565b3b15159056fe45524332303a207472616e7366657220746f20746865207a65726f2061646472657373416d6f756e7420746f6f20686967682c2062757920796f7572206f776e206c6f7445524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63655374616b696e67204c6f74206973207374696c6c206c6f636b65642e20596f75206861766520746f20776169742032207765656b732073696e6365206c6f742773207075726368617365536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657245524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656445524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220051d85730ff5b22d440e97fd44fdc12aa6667bcfb220121cf726c18c70e6d23f64736f6c634300060c0033",
  "immutableReferences": {
    "17": [
      {
        "length": 32,
        "start": 4838
      },
      {
        "length": 32,
        "start": 7291
      },
      {
        "length": 32,
        "start": 7684
      }
    ]
  },
  "sourceMap": "93:863:2:-:0;;;476:7:0;447:36;;521:10;489:42;;560:4;537:27;;185:189:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;185:189:2;;;;;;;;;;;;1605:441:0;;;;;;;;;;-1:-1:-1;;;1605:441:0;;;;;;;;;;;;;;;-1:-1:-1;;;1605:441:0;;;;;;;185:189:2;;;;;;;;;1605:441:0;;;-1:-1:-1;885:12:7;:10;:12::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:7;-1:-1:-1;;;;;907:18:7;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:7;940:43;;907:6;;940:43;-1:-1:-1;2085:12:9;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2107:16:9;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2133:9:9;:14;;1734::0::1;::::0;;;-1:-1:-1;;;;;;1734:14:0;::::1;::::0;2145:2:9;-1:-1:-1;;2133:14:9;;;;-1:-1:-1;;;;;;1758:18:0::1;2133:14:9::0;-1:-1:-1;;;;;1758:18:0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;1786:12:0::1;:16:::0;;;1812:13:::1;:17:::0;;;1839:19:::1;:23:::0;;;1872:19:::1;:23:::0;;;1905:18:::1;:31:::0;;1926:10:::1;-1:-1:-1::0;;;;;;1905:31:0;;::::1;::::0;::::1;::::0;;1946:13:::1;:26:::0;;;;::::1;;::::0;;1982:3:::1;:8:::0;2000:39:::1;::::0;;-1:-1:-1;;;2000:39:0;;-1:-1:-1;2000:39:0;::::1;::::0;;;;2034:4:::1;2000:39:::0;;;;;1734:14;;::::1;::::0;-1:-1:-1;2000:14:0::1;::::0;:39;;;;;::::1;::::0;;;;;;;;;;;;1734:14;2000:39;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;343:10:2::1;:24:::0;;-1:-1:-1;;;;;;343:24:2::1;-1:-1:-1::0;;;;;343:24:2;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;93:863:2;;-1:-1:-1;;;;;93:863:2;590:104:6;677:10;590:104;:::o;93:863:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;93:863:2;;;-1:-1:-1;93:863:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "93:863:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6365:1008:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6365:1008:0;-1:-1:-1;;;;;6365:1008:0;;:::i;:::-;;;;;;;;;;;;;;;;2219:81:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:166;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4255:166:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3262:98;;;;;;;;;;;;;:::i;570:41:0:-;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;570:41:0;;;;;;;;;;;;;;7379:367;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7379:367:0;-1:-1:-1;;;;;7379:367:0;;:::i;2261:119::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2261:119:0;-1:-1:-1;;;;;2261:119:0;;:::i;:::-;;4881:317:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4881:317:9;;;;;;;;;;;;;;;;;:::i;8152:477:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8152:477:0;-1:-1:-1;;;;;8152:477:0;;:::i;489:42::-;;;;;;;;;;;;;:::i;3121:81:9:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4587:1530:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4587:1530:0;;:::i;5593:215:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5593:215:9;;;;;;;;:::i;779:31:0:-;;;;;;;;;;;;;:::i;9614:147::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9614:147:0;;;;;;-1:-1:-1;;;;;9614:147:0;;:::i;412:28::-;;;;;;;;;;;;;:::i;8635:216::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8635:216:0;-1:-1:-1;;;;;8635:216:0;;:::i;447:36::-;;;;;;;;;;;;;:::i;2092:163::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2092:163:0;;:::i;154:24:2:-;;;;;;;;;;;;;:::i;3418:117:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3418:117:9;-1:-1:-1;;;;;3418:117:9;;:::i;1689:145:7:-;;;;;;;;;;;;;:::i;376:29:0:-;;;;;;;;;;;;;:::i;747:25::-;;;;;;;;;;;;;:::i;1066:77:7:-;;;;;;;;;;;;;:::i;612:342:2:-;;;;;;;;;;;;;:::i;7752:394:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7752:394:0;-1:-1:-1;;;;;7752:394:0;;:::i;2413:85:9:-;;;;;;;;;;;;;:::i;6295:266::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6295:266:9;;;;;;;;:::i;3738:172::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3738:172:9;;;;;;;;:::i;717:24:0:-;;;;;;;;;;;;;:::i;2386:354::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2386:354:0;;:::i;6168:191::-;;;;;;;;;;;;;:::i;659:15::-;;;;;;;;;;;;;:::i;680:31::-;;;;;;;;;;;;;:::i;3968:149:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3968:149:9;;;;;;;;;;:::i;617:36:0:-;;;;;;;;;;;;;:::i;1983:240:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:7;-1:-1:-1;;;;;1983:240:7;;:::i;537:27:0:-;;;;;;;;;;;;;:::i;6365:1008::-;-1:-1:-1;;;;;6469:26:0;;6433:21;6469:26;;;:16;:26;;;;;:33;:37;6466:901;;-1:-1:-1;;;;;6543:26:0;;6521:19;6543:26;;;:16;:26;;;;;6570:33;;-1:-1:-1;;6570:35:0;;;6543:63;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6645:20:0;;;;:10;:20;;;;;;;6704:27;;;:11;:27;;;;;;;6543:63;;-1:-1:-1;6645:20:0;6683:48;;6680:677;;6891:20;6960:32;;;:16;:32;;;;;;;;-1:-1:-1;;;;;6960:42:0;;;;;;;;;;6914:90;;6936:67;;:19;6993:8;6936:9;:19::i;:::-;:23;;:67::i;:::-;6914:17;;:21;:90::i;:::-;7022:28;7085:32;;;:16;:32;;;;;;;;-1:-1:-1;;;;;7085:42:0;;;;;;;;;;7053:27;;;:11;:27;;;;;;6891:113;;-1:-1:-1;7022:28:0;;7053:75;;:31;:75::i;:::-;7022:106;-1:-1:-1;7165:44:0;:15;7022:106;7165:19;:44::i;:::-;7146:63;;6680:677;;;;;7267:75;7289:52;7313:27;7331:8;7313:17;:27::i;:::-;7289:19;7299:8;7289:9;:19::i;:52::-;7267:17;;:21;:75::i;:::-;7248:94;;6680:677;6466:901;;;6365:1008;;;:::o;2219:81:9:-;2288:5;2281:12;;;;;;;;-1:-1:-1;;2281:12:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:13;;2281:12;;2288:5;;2281:12;;2288:5;2281:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:81;:::o;4255:166::-;4338:4;4354:39;4363:12;:10;:12::i;:::-;4377:7;4386:6;4354:8;:39::i;:::-;-1:-1:-1;4410:4:9;4255:166;;;;;:::o;3262:98::-;3341:12;;3262:98;:::o;570:41:0:-;;;-1:-1:-1;;;;;570:41:0;;:::o;7379:367::-;-1:-1:-1;;;;;7477:26:0;;7445:17;7477:26;;;:16;:26;;;;;:33;:37;7474:266;;-1:-1:-1;;;;;7552:26:0;;7530:19;7552:26;;;:16;:26;;;;;7579:33;;-1:-1:-1;;7579:35:0;;;7552:63;;;;;;;;;;;;;;7530:85;;7650:19;;7632:14;:37;7629:99;;;7686:32;;;;:16;:32;;;;;;;;-1:-1:-1;;;;;7686:42:0;;;;;;;;;;;-1:-1:-1;7629:99:0;7474:266;7379:367;;;:::o;2261:119::-;1280:12:7;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:7;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:7;;;;;;;;;;;;;;;2338:13:0::1;:35:::0;;-1:-1:-1;;;;;;2338:35:0::1;-1:-1:-1::0;;;;;2338:35:0;;;::::1;::::0;;;::::1;::::0;;2261:119::o;4881:317:9:-;4987:4;5003:36;5013:6;5021:9;5032:6;5003:9;:36::i;:::-;5049:121;5058:6;5066:12;:10;:12::i;:::-;5080:89;5118:6;5080:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5080:19:9;;;;;;:11;:19;;;;;;5100:12;:10;:12::i;:::-;-1:-1:-1;;;;;5080:33:9;;;;;;;;;;;;-1:-1:-1;5080:33:9;;;:89;:37;:89::i;:::-;5049:8;:121::i;:::-;-1:-1:-1;5187:4:9;4881:317;;;;;:::o;8152:477:0:-;8220:15;8246:19;8268;8278:8;8268:9;:19::i;:::-;8246:41;;8297:19;8319:27;8337:8;8319:17;:27::i;:::-;8297:49;-1:-1:-1;8356:11:0;8370:34;:14;8297:49;8370:18;:34::i;:::-;8356:48;;8414:11;8428:7;;;;;;;;;-1:-1:-1;;;;;8428:7:0;-1:-1:-1;;;;;8428:16:0;;8453:4;8428:31;;;;;;;;;;;;;-1:-1:-1;;;;;8428:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8428:31:0;8472:13;;8428:31;;-1:-1:-1;8472:17:0;8469:153;;8516:65;8572:8;;8516:51;8560:6;8516:39;8541:13;;8516:20;8527:8;;8516:6;:10;;:20;;;;:::i;:::-;:24;;:39::i;:::-;:43;;:51::i;:65::-;8503:78;;8469:153;;;8621:1;8608:14;;8469:153;8152:477;;;;;;;:::o;489:42::-;;;;:::o;3121:81:9:-;3186:9;;;;3121:81;:::o;4587:1530:0:-;4694:1;4654:25;;;:16;:25;;;;;;;;4680:10;4654:37;;;;;;;;4646:83;;;;;-1:-1:-1;;;4646:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4786:19;;4775:7;:30;;4767:64;;;;;-1:-1:-1;;;4767:64:0;;;;;;;;;;;;-1:-1:-1;;;4767:64:0;;;;;;;;;;;;;;;4890:19;;4879:7;:30;4876:1235;;;4963:19;;4946:37;;;;:16;:37;;;;;;;;4984:10;4946:49;;;;;;;;4924:72;;:21;:72::i;:::-;5050:1;5010:25;;;:16;:25;;;;;;;;5036:10;5010:37;;;;;;;:41;4876:1235;;;5090:29;;;;:20;:29;;;;;;5123:3;-1:-1:-1;5090:36:0;5082:123;;;;-1:-1:-1;;;5082:123:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5243:7;;;;;;;;;-1:-1:-1;;;;;5243:7:0;-1:-1:-1;;;;;5243:12:0;;5256:1;5243:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5277:12:0;;;5285:3;5277:12;;;;;;-1:-1:-1;5277:12:0;;;;;;;-1:-1:-1;5277:12:0;5331:25;;;;:16;:25;;;;;;;;;5303:53;;;;;;;;;;;;;;;;;:25;;:53;;;5331:25;5303:53;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5303:53:0;;;;;;;;;;;;;;;;-1:-1:-1;;;5370:11:0;5384:25;;;:16;:25;;;;;;;;5410:10;5384:37;;;;;;;;5303:53;;-1:-1:-1;5436:29:0;;-1:-1:-1;5384:37:0;;-1:-1:-1;5436:21:0;:29::i;:::-;5479:13;:23;;;;;;;:13;;5543:558;5563:8;:15;5559:1;:19;5543:558;;;5611:8;5620:1;5611:11;;;;;;;;;;;;;;;;;;;5649:25;;;;:16;:25;;;;;;-1:-1:-1;;;;;5649:32:0;;;;;;;;;;;-1:-1:-1;5611:11:0;-1:-1:-1;5806:10:0;5797:19;5794:176;;5840:13;:23;;;;;;;5885:17;5896:5;5885:10;:17::i;:::-;;5924:27;5937:6;5945:5;5924:12;:27::i;:::-;6085:1;6050:25;;;:16;:25;;;;;;;;-1:-1:-1;;;;;6050:32:0;;;;;;;;;:36;5580:3;;5543:558;;;;4876:1235;;;;4587:1530;:::o;5593:215:9:-;5681:4;5697:83;5706:12;:10;:12::i;:::-;5720:7;5729:50;5768:10;5729:11;:25;5741:12;:10;:12::i;:::-;-1:-1:-1;;;;;5729:25:9;;;;;;;;;;;;;;;;;-1:-1:-1;5729:25:9;;;:34;;;;;;;;;;;:38;:50::i;779:31:0:-;;;;:::o;9614:147::-;9696:4;9719:25;;;:16;:25;;;;;;;;-1:-1:-1;;;;;9719:35:0;;;;;;;;;;;;;9614:147::o;412:28::-;;;;;;-1:-1:-1;;;;;412:28:0;;:::o;8635:216::-;8694:11;8717:15;8735:29;8755:8;8735:19;:29::i;:::-;8717:47;;8781:63;8833:10;8781:47;8807:20;8818:8;8807:10;:20::i;:::-;-1:-1:-1;;;;;8781:21:0;;;;;;:11;:21;;;;;;;:25;:47::i;:::-;:51;;:63::i;:::-;8774:70;8635:216;-1:-1:-1;;;8635:216:0:o;447:36::-;;;;:::o;2092:163::-;1280:12:7;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:7;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:7;;;;;;;;;;;;;;;2166:1:0::1;2159:4;:8;2151:32;;;::::0;;-1:-1:-1;;;2151:32:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2151:32:0;;;;;;;;;;;;;::::1;;2208:3;2201:4;:10;2193:35;;;::::0;;-1:-1:-1;;;2193:35:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2193:35:0;;;;;;;;;;;;;::::1;;2238:3;:10:::0;2092:163::o;154:24:2:-;;;-1:-1:-1;;;;;154:24:2;;:::o;3418:117:9:-;-1:-1:-1;;;;;3510:18:9;3484:7;3510:18;;;:9;:18;;;;;;;3418:117::o;1689:145:7:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:7;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:7;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:7;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:7::1;::::0;;1689:145::o;376:29:0:-;;;:::o;747:25::-;;;;:::o;1066:77:7:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:7;1066:77;:::o;612:342:2:-;676:7;;:31;;;-1:-1:-1;;;676:31:2;;701:4;676:31;;;;;;-1:-1:-1;;676:7:2;;;-1:-1:-1;;;;;676:7:2;;:16;;:31;;;;;;;;;;;;;;:7;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:31:2;;-1:-1:-1;720:10:2;;717:45;;741:7;;;;;;;;;-1:-1:-1;;;;;741:7:2;-1:-1:-1;;;;;741:19:2;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;741:21:2;;-1:-1:-1;717:45:2;792:1;775:13;;:18;772:175;;819:18;;795:10;;:51;;-1:-1:-1;;;;;795:10:2;;;;819:18;839:6;795:23;:51::i;:::-;772:175;;;883:64;907:39;932:13;;907:20;918:8;;907:6;:10;;:20;;;;:::i;:39::-;883:19;;;:23;:64::i;:::-;861:19;:86;612:342;:::o;7752:394:0:-;7811:11;7834:19;7856;7866:8;7856:9;:19::i;:::-;7834:41;;7885:19;7907:27;7925:8;7907:17;:27::i;:::-;7885:49;-1:-1:-1;7944:11:0;7958:34;:14;7885:49;7958:18;:34::i;:::-;8011:1;;-1:-1:-1;7944:48:0;-1:-1:-1;8025:10:0;;8022:117;;8059:80;8130:8;;8059:66;8095:29;8115:8;8095:19;:29::i;:::-;8059:19;;:31;;8083:6;8059:23;:31::i;:80::-;8050:89;;8022:117;7752:394;;;;;;:::o;2413:85:9:-;2484:7;2477:14;;;;;;;;-1:-1:-1;;2477:14:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:13;;2477:14;;2484:7;;2477:14;;2484:7;2477:14;;;;;;;;;;;;;;;;;;;;;;;;6295:266;6388:4;6404:129;6413:12;:10;:12::i;:::-;6427:7;6436:96;6475:15;6436:96;;;;;;;;;;;;;;;;;:11;:25;6448:12;:10;:12::i;:::-;-1:-1:-1;;;;;6436:25:9;;;;;;;;;;;;;;;;;-1:-1:-1;6436:25:9;;;:34;;;;;;;;;;;:96;:38;:96::i;3738:172::-;3824:4;3840:42;3850:12;:10;:12::i;:::-;3864:9;3875:6;3840:9;:42::i;717:24:0:-;;;;:::o;2386:354::-;2464:1;2449:12;:16;2441:43;;;;;-1:-1:-1;;;2441:43:0;;;;;;;;;;;;-1:-1:-1;;;2441:43:0;;;;;;;;;;;;;;;2517:17;;2502:12;:32;2494:78;;;;-1:-1:-1;;;2494:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2609:26;2622:12;2609;:26::i;:::-;2646:38;2659:12;2673:10;2646:12;:38::i;:::-;2700:33;;;2708:10;2700:33;;;;;;;;;;;;;;;;;;;;;2386:354;:::o;6168:191::-;6208:11;6222:22;6233:10;6222;:22::i;:::-;6208:36;;6254:23;6270:6;6254:15;:23::i;:::-;6299:10;6313:1;6287:23;;;:11;:23;;;;;;;;:27;;;;6329:23;;;;;;;;;;;;;;;;;;;;;;6168:191;:::o;659:15::-;;;;:::o;680:31::-;;;;:::o;3968:149:9:-;-1:-1:-1;;;;;4083:18:9;;;4057:7;4083:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3968:149::o;617:36:0:-;;;-1:-1:-1;;;;;617:36:0;;:::o;1983:240:7:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:7;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:7;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1262:67:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:7;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:7::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:7;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:7::1;-1:-1:-1::0;;;;;2199:17:7;;;::::1;::::0;;;::::1;::::0;;1983:240::o;537:27:0:-;;;;:::o;1321:134:8:-;1379:7;1405:43;1409:1;1412;1405:43;;;;;;;;;;;;;;;;;:3;:43::i;2180:459::-;2238:7;2479:6;2475:45;;-1:-1:-1;2508:1:8;2501:8;;2475:45;2542:5;;;2546:1;2542;:5;:1;2565:5;;;;;:10;2557:56;;;;-1:-1:-1;;;2557:56:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;874:176;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;590:104:6;677:10;590:104;:::o;9357:340:9:-;-1:-1:-1;;;;;9458:19:9;;9450:68;;;;-1:-1:-1;;;9450:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9536:21:9;;9528:68;;;;-1:-1:-1;;;9528:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9607:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9658:32;;;;;;;;;;;;;;;;;9357:340;;;:::o;7035:530::-;-1:-1:-1;;;;;7140:20:9;;7132:70;;;;-1:-1:-1;;;7132:70:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7220:23:9;;7212:71;;;;-1:-1:-1;;;7212:71:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7294:47;7315:6;7323:9;7334:6;7294:20;:47::i;:::-;7372:71;7394:6;7372:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7372:17:9;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7352:17:9;;;;;;;:9;:17;;;;;;:91;;;;7476:20;;;;;;;:32;;7501:6;7476:24;:32::i;:::-;-1:-1:-1;;;;;7453:20:9;;;;;;;:9;:20;;;;;;;;;:55;;;;7523:35;;;;;;;7453:20;;7523:35;;;;;;;;;;;;;7035:530;;;:::o;1746:187:8:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:8;;;1746:187::o;3101:130::-;3159:7;3185:39;3189:1;3192;3185:39;;;;;;;;;;;;;;;;;:3;:39::i;4385:196:0:-;4464:12;;:25;;4481:7;4464:16;:25::i;:::-;4449:12;:40;4499:26;4505:10;4517:7;4499:5;:26::i;:::-;4535:39;-1:-1:-1;;;;;4535:5:0;:18;4554:10;4566:7;4535:18;:39::i;8857:290::-;8913:11;8936:14;:12;:14::i;:::-;8960:12;8975:20;8986:8;8975:10;:20::i;:::-;9028:19;;-1:-1:-1;;;;;9005:20:0;;;;;;:10;:20;;;;;;;;:42;;;;9066:11;:21;;;;8960:35;;-1:-1:-1;9066:34:0;;8960:35;9066:25;:34::i;:::-;-1:-1:-1;;;;;9110:21:0;;;;;;;:11;:21;;;;;:30;;;-1:-1:-1;9057:43:0;;8857:290;-1:-1:-1;8857:290:0:o;2981:479::-;3097:17;;3079:13;;3062:12;;:31;;:16;:31::i;:::-;:52;3059:395;;3129:18;3150:54;3186:17;;3150:31;3167:13;;3150:12;;:16;;:31;;;;:::i;:54::-;3129:75;-1:-1:-1;3218:55:0;3231:31;:12;3129:75;3231:16;:31::i;:::-;3264:8;3218:12;:55::i;:::-;3288:15;:13;:15::i;:::-;3320:17;;3317:59;;3339:37;3352:13;3367:8;3339:12;:37::i;:::-;3059:395;;;;3407:36;3420:12;3434:8;3407:12;:36::i;:::-;2981:479;;:::o;696:175:11:-;805:58;;;-1:-1:-1;;;;;805:58:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;805:58:11;-1:-1:-1;;;805:58:11;;;778:86;;798:5;;778:19;:86::i;:::-;696:175;;;:::o;2746:229:0:-;2821:12;;:30;;2838:12;2821:16;:30::i;:::-;2806:12;:45;2863:31;2869:10;2881:12;2863:5;:31::i;:::-;2905:63;-1:-1:-1;;;;;2905:5:0;:22;2928:10;2948:4;2955:12;2905:22;:63::i;380:226:2:-;447:77;471:10;483:40;519:3;483:31;495:18;509:3;;500;495:13;;:18;;;;:::i;:::-;483:7;;:11;:31::i;:40::-;447:10;;-1:-1:-1;;;;;447:10:2;;:77;:23;:77::i;:::-;558:13;;585:3;;534:65;;-1:-1:-1;;;;;558:13:2;;573:25;;594:3;;573:16;;:7;;:11;:16::i;9153:186:0:-;-1:-1:-1;;;;;9250:18:0;;;9246:40;;9270:16;9281:4;9270:10;:16::i;:::-;;9246:40;-1:-1:-1;;;;;9300:16:0;;;9296:36;;9318:14;9329:2;9318:10;:14::i;:::-;;9153:186;;;:::o;3713:272:8:-;3799:7;3833:12;3826:5;3818:28;;;;-1:-1:-1;;;3818:28:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3856:9;3872:1;3868;:5;;;;;;;3713:272;-1:-1:-1;;;;;3713:272:8:o;8524:410:9:-;-1:-1:-1;;;;;8607:21:9;;8599:67;;;;-1:-1:-1;;;8599:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8677:49;8698:7;8715:1;8719:6;8677:20;:49::i;:::-;8758:68;8781:6;8758:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8758:18:9;;;;;;:9;:18;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8737:18:9;;;;;;:9;:18;;;;;:89;8851:12;;:24;;8868:6;8851:16;:24::i;:::-;8836:12;:39;8890:37;;;;;;;;8916:1;;-1:-1:-1;;;;;8890:37:9;;;;;;;;;;;;8524:410;;:::o;3818:561:0:-;3911:19;;3894:37;;;;:16;:37;;;;;;;;-1:-1:-1;;;;;3894:47:0;;;;;;;;;;3891:250;;-1:-1:-1;;;;;3962:26:0;;;;;;:16;:26;;;;;;;;3994:19;;;3962:52;;;;;;;;;;;;;;;;4095:19;4078:37;;:16;:37;;;;;:52;;;;;;;;;;;;;;-1:-1:-1;;;;;;4078:52:0;;;;;;3891:250;4262:19;;4245:37;;;;:16;:37;;;;;;;;-1:-1:-1;;;;;4245:47:0;;;;;;;;;;:60;;4297:7;4245:51;:60::i;:::-;4212:19;;;4195:37;;;;:16;:37;;;;;;;;-1:-1:-1;;;;;4195:47:0;;;;;;;;;;;;:110;;;;4352:19;;4320:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3818:561;;:::o;3466:346::-;3510:7;;;;;;;;;-1:-1:-1;;;;;3510:7:0;-1:-1:-1;;;;;3510:11:0;;3522:1;3510:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3569:19:0;;3546;;;3534:32;;;;:11;:32;;;;;;;;:54;;;;3648:14;;3619:19;;3598:41;;:20;:41;;;;;;3642:3;:20;;;3598:64;;;3694:19;;3716:1;3694:23;3672:45;;-1:-1:-1;;3761:17:0;;3743:13;;:36;;:17;:36::i;:::-;3727:13;:52;3794:11;;;3801:3;3794:11;;;;;;;;;;;;;3466:346::o;2959:751:11:-;3378:23;3404:69;3432:4;3404:69;;;;;;;;;;;;;;;;;3412:5;-1:-1:-1;;;;;3404:27:11;;;:69;;;;;:::i;:::-;3487:17;;3378:95;;-1:-1:-1;3487:21:11;3483:221;;3627:10;3616:30;;;;;;;;;;;;;;;-1:-1:-1;3616:30:11;3608:85;;;;-1:-1:-1;;;3608:85:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7835:370:9;-1:-1:-1;;;;;7918:21:9;;7910:65;;;;;-1:-1:-1;;;7910:65:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;7986:49;8015:1;8019:7;8028:6;7986:20;:49::i;:::-;8061:12;;:24;;8078:6;8061:16;:24::i;:::-;8046:12;:39;-1:-1:-1;;;;;8116:18:9;;;;;;:9;:18;;;;;;:30;;8139:6;8116:22;:30::i;:::-;-1:-1:-1;;;;;8095:18:9;;;;;;:9;:18;;;;;;;;:51;;;;8161:37;;;;;;;8095:18;;;;8161:37;;;;;;;;;;7835:370;;:::o;877:203:11:-;1004:68;;;-1:-1:-1;;;;;1004:68:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1004:68:11;-1:-1:-1;;;1004:68:11;;;977:96;;997:5;;977:19;:96::i;3573:194:12:-;3676:12;3707:53;3730:6;3738:4;3744:1;3747:12;3707:22;:53::i;:::-;3700:60;3573:194;-1:-1:-1;;;;3573:194:12:o;4920:958::-;5050:12;5082:18;5093:6;5082:10;:18::i;:::-;5074:60;;;;;-1:-1:-1;;;5074:60:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:12;5219:23;5246:6;-1:-1:-1;;;;;5246:11:12;5266:8;5277:4;5246:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5246:36:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:78;;;;5296:7;5292:580;;;5326:10;-1:-1:-1;5319:17:12;;-1:-1:-1;5319:17:12;5292:580;5437:17;;:21;5433:429;;5695:10;5689:17;5755:15;5742:10;5738:2;5734:19;5727:44;5644:145;5827:20;;-1:-1:-1;;;5827:20:12;;;;;;;;;;;;;;;;;5834:12;;5827:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:413;1078:20;1116:8;;;718:413::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\nimport \"./HegicPooledStaking.sol\";\n\ncontract HegicPooledStakingWBTC is HegicPooledStaking {\n\n    IERC20 public underlying;\n\n    constructor(IERC20 _token, IHegicStaking _staking, IERC20 _underlying) public HegicPooledStaking(_token, _staking, \"ETH Staked HEGIC\", \"sHEGICETH\") {\n        underlying = _underlying;\n    }\n\n    function _transferProfit(uint _amount) internal override {\n        underlying.safeTransfer(msg.sender, _amount.mul(uint(100).sub(FEE)).div(100));\n        underlying.safeTransfer(FEE_RECIPIENT, _amount.mul(FEE).div(100));\n    }\n\n    function updateProfit() public override {\n        uint profit = staking.profitOf(address(this));\n        if(profit > 0) profit = staking.claimProfit();\n        if(lockedBalance <= 0) underlying.safeTransfer(FALLBACK_RECIPIENT, profit);\n        else totalProfitPerToken = totalProfitPerToken.add(profit.mul(ACCURACY).div(lockedBalance));\n    }\n}",
  "sourcePath": "/Users/juanmontero/Projects/DeFi/hegic/hegic-pooled-staking/contracts/HegicPooledStakingWBTC.sol",
  "ast": {
    "absolutePath": "/Users/juanmontero/Projects/DeFi/hegic/hegic-pooled-staking/contracts/HegicPooledStakingWBTC.sol",
    "exportedSymbols": {
      "HegicPooledStakingWBTC": [
        1239
      ]
    },
    "id": 1240,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1124,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "/Users/juanmontero/Projects/DeFi/hegic/hegic-pooled-staking/contracts/HegicPooledStaking.sol",
        "file": "./HegicPooledStaking.sol",
        "id": 1125,
        "nodeType": "ImportDirective",
        "scope": 1240,
        "sourceUnit": 1016,
        "src": "57:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1126,
              "name": "HegicPooledStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1015,
              "src": "128:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HegicPooledStaking_$1015",
                "typeString": "contract HegicPooledStaking"
              }
            },
            "id": 1127,
            "nodeType": "InheritanceSpecifier",
            "src": "128:18:2"
          }
        ],
        "contractDependencies": [
          1015,
          1790,
          1899,
          2602,
          2680
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1239,
        "linearizedBaseContracts": [
          1239,
          1015,
          2602,
          2680,
          1899,
          1790
        ],
        "name": "HegicPooledStakingWBTC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6f307dc3",
            "id": 1129,
            "mutability": "mutable",
            "name": "underlying",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1239,
            "src": "154:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2680",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1128,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2680,
              "src": "154:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2680",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "333:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1144,
                      "name": "underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1129,
                      "src": "343:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2680",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1145,
                      "name": "_underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "356:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2680",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "343:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2680",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "343:24:2"
                }
              ]
            },
            "documentation": null,
            "id": 1149,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1138,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1131,
                    "src": "282:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2680",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1139,
                    "name": "_staking",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1133,
                    "src": "290:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                      "typeString": "contract IHegicStaking"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "455448205374616b6564204845474943",
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "300:18:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_659aa14f508a7d835fbe435488f3af345c2a153483f612c31a9a99f8d6c6e59b",
                      "typeString": "literal_string \"ETH Staked HEGIC\""
                    },
                    "value": "ETH Staked HEGIC"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "734845474943455448",
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "320:11:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f261c3eba57f9fd53e59ab77c6260a9e9034f8879cf5d6ccd31574a8e2bd0544",
                      "typeString": "literal_string \"sHEGICETH\""
                    },
                    "value": "sHEGICETH"
                  }
                ],
                "id": 1142,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1137,
                  "name": "HegicPooledStaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1015,
                  "src": "263:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HegicPooledStaking_$1015_$",
                    "typeString": "type(contract HegicPooledStaking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "263:69:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1131,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1149,
                  "src": "197:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2680",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1130,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2680,
                    "src": "197:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2680",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "_staking",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1149,
                  "src": "212:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                    "typeString": "contract IHegicStaking"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1132,
                    "name": "IHegicStaking",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1269,
                    "src": "212:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                      "typeString": "contract IHegicStaking"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1135,
                  "mutability": "mutable",
                  "name": "_underlying",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1149,
                  "src": "236:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2680",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1134,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2680,
                    "src": "236:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2680",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "196:59:2"
            },
            "returnParameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:2"
            },
            "scope": 1239,
            "src": "185:189:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              998
            ],
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "437:169:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1158,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "471:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "471:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "313030",
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "519:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1167,
                                    "name": "FEE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34,
                                    "src": "509:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 1164,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "500:3:2",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "id": 1163,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "495:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1162,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "495:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 1165,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "495:9:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1166,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1945,
                                  "src": "495:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "495:18:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1160,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1151,
                                "src": "483:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2008,
                              "src": "483:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "483:31:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2025,
                          "src": "483:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "483:40:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1155,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "447:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2680",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2714,
                      "src": "447:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2680_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2680_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:77:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "447:77:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1178,
                        "name": "FEE_RECIPIENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "558:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "313030",
                            "id": 1184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "594:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1181,
                                "name": "FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "585:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1179,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1151,
                                "src": "573:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2008,
                              "src": "573:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "573:16:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2025,
                          "src": "573:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "573:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1175,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "534:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2680",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2714,
                      "src": "534:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2680_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2680_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "534:65:2"
                }
              ]
            },
            "documentation": null,
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1153,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "428:8:2"
            },
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1189,
                  "src": "405:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "404:14:2"
            },
            "returnParameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:0:2"
            },
            "scope": 1239,
            "src": "380:226:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              623
            ],
            "body": {
              "id": 1237,
              "nodeType": "Block",
              "src": "652:302:2",
              "statements": [
                {
                  "assignments": [
                    1194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "profit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1237,
                      "src": "662:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1193,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "662:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1202,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1199,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "701:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HegicPooledStakingWBTC_$1239",
                              "typeString": "contract HegicPooledStakingWBTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HegicPooledStakingWBTC_$1239",
                              "typeString": "contract HegicPooledStakingWBTC"
                            }
                          ],
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "693:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1197,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "693:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "693:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1195,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "676:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                          "typeString": "contract IHegicStaking"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "profitOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1268,
                      "src": "676:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "662:45:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1203,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "720:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "729:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "720:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1212,
                  "nodeType": "IfStatement",
                  "src": "717:45:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1206,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1194,
                        "src": "732:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1207,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "741:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                              "typeString": "contract IHegicStaking"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimProfit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1251,
                          "src": "741:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                            "typeString": "function () external returns (uint256)"
                          }
                        },
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "741:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "732:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1211,
                    "nodeType": "ExpressionStatement",
                    "src": "732:30:2"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1213,
                      "name": "lockedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "775:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "792:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "775:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1223,
                        "name": "totalProfitPerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "861:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1231,
                                "name": "lockedBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "932:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1228,
                                    "name": "ACCURACY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "918:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1226,
                                    "name": "profit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1194,
                                    "src": "907:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2008,
                                  "src": "907:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "907:20:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2025,
                              "src": "907:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "907:39:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1224,
                            "name": "totalProfitPerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "883:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1928,
                          "src": "883:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "883:64:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "861:86:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1235,
                    "nodeType": "ExpressionStatement",
                    "src": "861:86:2"
                  },
                  "id": 1236,
                  "nodeType": "IfStatement",
                  "src": "772:175:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1219,
                          "name": "FALLBACK_RECIPIENT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "819:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1220,
                          "name": "profit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1194,
                          "src": "839:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1216,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1129,
                          "src": "795:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$2680",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2714,
                        "src": "795:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2680_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2680_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "795:51:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1222,
                    "nodeType": "ExpressionStatement",
                    "src": "795:51:2"
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8ec84812",
            "id": 1238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1191,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "643:8:2"
            },
            "parameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:2:2"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:2"
            },
            "scope": 1239,
            "src": "612:342:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1240,
        "src": "93:863:2"
      }
    ],
    "src": "32:924:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/juanmontero/Projects/DeFi/hegic/hegic-pooled-staking/contracts/HegicPooledStakingWBTC.sol",
    "exportedSymbols": {
      "HegicPooledStakingWBTC": [
        1239
      ]
    },
    "id": 1240,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1124,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:2"
      },
      {
        "absolutePath": "/Users/juanmontero/Projects/DeFi/hegic/hegic-pooled-staking/contracts/HegicPooledStaking.sol",
        "file": "./HegicPooledStaking.sol",
        "id": 1125,
        "nodeType": "ImportDirective",
        "scope": 1240,
        "sourceUnit": 1016,
        "src": "57:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1126,
              "name": "HegicPooledStaking",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1015,
              "src": "128:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HegicPooledStaking_$1015",
                "typeString": "contract HegicPooledStaking"
              }
            },
            "id": 1127,
            "nodeType": "InheritanceSpecifier",
            "src": "128:18:2"
          }
        ],
        "contractDependencies": [
          1015,
          1790,
          1899,
          2602,
          2680
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1239,
        "linearizedBaseContracts": [
          1239,
          1015,
          2602,
          2680,
          1899,
          1790
        ],
        "name": "HegicPooledStakingWBTC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "6f307dc3",
            "id": 1129,
            "mutability": "mutable",
            "name": "underlying",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1239,
            "src": "154:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2680",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1128,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2680,
              "src": "154:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2680",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "333:41:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1144,
                      "name": "underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1129,
                      "src": "343:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2680",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1145,
                      "name": "_underlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "356:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2680",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "343:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2680",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "343:24:2"
                }
              ]
            },
            "documentation": null,
            "id": 1149,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1138,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1131,
                    "src": "282:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2680",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1139,
                    "name": "_staking",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1133,
                    "src": "290:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                      "typeString": "contract IHegicStaking"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "455448205374616b6564204845474943",
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "300:18:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_659aa14f508a7d835fbe435488f3af345c2a153483f612c31a9a99f8d6c6e59b",
                      "typeString": "literal_string \"ETH Staked HEGIC\""
                    },
                    "value": "ETH Staked HEGIC"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "734845474943455448",
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "320:11:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f261c3eba57f9fd53e59ab77c6260a9e9034f8879cf5d6ccd31574a8e2bd0544",
                      "typeString": "literal_string \"sHEGICETH\""
                    },
                    "value": "sHEGICETH"
                  }
                ],
                "id": 1142,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1137,
                  "name": "HegicPooledStaking",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1015,
                  "src": "263:18:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_HegicPooledStaking_$1015_$",
                    "typeString": "type(contract HegicPooledStaking)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "263:69:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1131,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1149,
                  "src": "197:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2680",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1130,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2680,
                    "src": "197:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2680",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "_staking",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1149,
                  "src": "212:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                    "typeString": "contract IHegicStaking"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1132,
                    "name": "IHegicStaking",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1269,
                    "src": "212:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                      "typeString": "contract IHegicStaking"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1135,
                  "mutability": "mutable",
                  "name": "_underlying",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1149,
                  "src": "236:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$2680",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1134,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2680,
                    "src": "236:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2680",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "196:59:2"
            },
            "returnParameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:0:2"
            },
            "scope": 1239,
            "src": "185:189:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              998
            ],
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "437:169:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1158,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "471:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "471:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "313030",
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "519:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1167,
                                    "name": "FEE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 34,
                                    "src": "509:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "313030",
                                        "id": 1164,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "500:3:2",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        }
                                      ],
                                      "id": 1163,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "495:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 1162,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "495:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 1165,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "495:9:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1166,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1945,
                                  "src": "495:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "495:18:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1160,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1151,
                                "src": "483:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2008,
                              "src": "483:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "483:31:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2025,
                          "src": "483:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "483:40:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1155,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "447:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2680",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2714,
                      "src": "447:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2680_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2680_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:77:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "447:77:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1178,
                        "name": "FEE_RECIPIENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "558:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "313030",
                            "id": 1184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "594:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1181,
                                "name": "FEE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "585:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1179,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1151,
                                "src": "573:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2008,
                              "src": "573:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "573:16:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2025,
                          "src": "573:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "573:25:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1175,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "534:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2680",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2714,
                      "src": "534:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2680_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2680_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "534:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "534:65:2"
                }
              ]
            },
            "documentation": null,
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1153,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "428:8:2"
            },
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1189,
                  "src": "405:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "404:14:2"
            },
            "returnParameters": {
              "id": 1154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:0:2"
            },
            "scope": 1239,
            "src": "380:226:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              623
            ],
            "body": {
              "id": 1237,
              "nodeType": "Block",
              "src": "652:302:2",
              "statements": [
                {
                  "assignments": [
                    1194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "profit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1237,
                      "src": "662:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1193,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "662:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1202,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1199,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "701:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HegicPooledStakingWBTC_$1239",
                              "typeString": "contract HegicPooledStakingWBTC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HegicPooledStakingWBTC_$1239",
                              "typeString": "contract HegicPooledStakingWBTC"
                            }
                          ],
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "693:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1197,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "693:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "693:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1195,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "676:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                          "typeString": "contract IHegicStaking"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "profitOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1268,
                      "src": "676:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "662:45:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1203,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "720:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "729:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "720:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1212,
                  "nodeType": "IfStatement",
                  "src": "717:45:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1206,
                        "name": "profit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1194,
                        "src": "732:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1207,
                            "name": "staking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "741:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHegicStaking_$1269",
                              "typeString": "contract IHegicStaking"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimProfit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1251,
                          "src": "741:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                            "typeString": "function () external returns (uint256)"
                          }
                        },
                        "id": 1209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "741:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "732:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1211,
                    "nodeType": "ExpressionStatement",
                    "src": "732:30:2"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1213,
                      "name": "lockedBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "775:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "792:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "775:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1223,
                        "name": "totalProfitPerToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "861:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1231,
                                "name": "lockedBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "932:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1228,
                                    "name": "ACCURACY",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28,
                                    "src": "918:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1226,
                                    "name": "profit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1194,
                                    "src": "907:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2008,
                                  "src": "907:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "907:20:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2025,
                              "src": "907:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "907:39:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1224,
                            "name": "totalProfitPerToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "883:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1928,
                          "src": "883:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "883:64:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "861:86:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1235,
                    "nodeType": "ExpressionStatement",
                    "src": "861:86:2"
                  },
                  "id": 1236,
                  "nodeType": "IfStatement",
                  "src": "772:175:2",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1219,
                          "name": "FALLBACK_RECIPIENT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30,
                          "src": "819:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1220,
                          "name": "profit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1194,
                          "src": "839:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1216,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1129,
                          "src": "795:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$2680",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2714,
                        "src": "795:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2680_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2680_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "795:51:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1222,
                    "nodeType": "ExpressionStatement",
                    "src": "795:51:2"
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8ec84812",
            "id": 1238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateProfit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1191,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "643:8:2"
            },
            "parameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:2:2"
            },
            "returnParameters": {
              "id": 1192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:2"
            },
            "scope": 1239,
            "src": "612:342:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1240,
        "src": "93:863:2"
      }
    ],
    "src": "32:924:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x06239653922ac7bea6aa2b19dc486b9361821d37712eb796adfd38d81de278ca": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "lotId",
              "type": "uint256"
            }
          ],
          "name": "AddLiquidity",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xda7648eeaf3d0dc82ce7240eed345d3268ee5959cc3021dad64a9743214bc9a1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "buyDate",
              "type": "uint256"
            }
          ],
          "name": "BuyLot",
          "type": "event"
        },
        "0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x357b676c439b9e49b4410f8eb8680bee4223724802d8e3fd422e1756f87b475f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            }
          ],
          "name": "Pay",
          "type": "event"
        },
        "0xd49accdec98ee69b54d4406b129420fc3adf0c8d610bcb9ef28806fb07d31834": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "sellDate",
              "type": "uint256"
            }
          ],
          "name": "SellLot",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0a4fa96d217C7BeC89909232e5934733e54C6Be5",
      "transactionHash": "0xc2915d9bd8a84d53897cb2271d112c6be4fd5b81eb43960402a279b9ac1a8248"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-06T14:15:01.405Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}